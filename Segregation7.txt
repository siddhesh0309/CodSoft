import pandas as pd
from openpyxl import load_workbook
import os

template_path = "template.xlsm"
mapping_path = "mapping.xlsx"
output_folder = "segregated_by_status"

# Load template file (headers at row 4, data from row 9)
print("🔄 Reading template file...")
df_template = pd.read_excel(template_path, sheet_name="Account Holder", engine="openpyxl", header=3, skiprows=[4, 5, 6, 7, 8])

# Load mapping file
print("🔄 Reading mapping file...")
df_mapping = pd.read_excel(mapping_path, dtype=str)

# Ensure required fields exist in mapping file
required_columns = {"Account Number", "Occupation", "GHO Code", "Status of Account"}
if not required_columns.issubset(df_mapping.columns):
    missing = required_columns - set(df_mapping.columns)
    raise ValueError(f"❌ Mapping file is missing required columns: {missing}")

# Merge on Account Number
print("🔗 Merging mapping data into template...")
df_template = df_template.merge(df_mapping[["Account Number", "Occupation", "GHO Code", "Status of Account"]],
                                on="Account Number", how="left")

# Save back into template file
print("💾 Updating template file with new columns...")
workbook = load_workbook(template_path, keep_vba=True)
writer = pd.ExcelWriter(template_path, engine='openpyxl', mode='a', if_sheet_exists='overlay')
writer.book = workbook
writer.sheets = {ws.title: ws for ws in workbook.worksheets}

# Overwrite from row 9, no header
startrow = 8
df_template.to_excel(writer, sheet_name="Account Holder", index=False, header=False, startrow=startrow)

writer.save()
writer.close()
print("✅ Template updated with Occupation, GHO Code, and Status of Account.")

# Create segregated files based on Status of Account
print("📁 Creating segregated files by Status of Account...")
os.makedirs(output_folder, exist_ok=True)

for status in df_template["Status of Account"].dropna().unique():
    df_filtered = df_template[df_template["Status of Account"] == status]
    output_file = os.path.join(output_folder, f"{status}_accounts.xlsx")
    df_filtered.to_excel(output_file, index=False)
    print(f"✅ Created: {output_file}")

print("🎯 All done!")
